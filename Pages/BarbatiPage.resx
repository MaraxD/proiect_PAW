<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P/8=
</value>
  </data>
</root>