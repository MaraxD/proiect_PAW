<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="error.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAV1dXAG1tbQFmZmYCNDQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVQBeXl4BX19fAg4O
        DgD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAwMDAATExMXCgoKigoKCpoQEBAqAAAAAJeXlwAAAAAAAAAAAAAAAAATExMAFhYWFAsL
        C4UKCgqdEhISLggICAArKysAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHd3dwAAAAAAGxsbEQkJCYMICAi5CAgIqQgICKYREREmDAwMJgwMDCYMDAwmDAwMJg4O
        DiMLCwt6BwcHwgkJCaAGBgatFRUVFwAAAABfX18AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        CKsGBgbTCgoKdx8fHwkaGhoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALS0tAFJSUgEUFBQmCwsLcAoK
        CpsKCgqdCwsLeBISEi86OjoCKioqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////+f5///D8P//gAB//wAAP/8AAH//H////wAA//8A
        AP//AAB//wAAf/8AAH/+AAB//gAAP/4AAA/+AAEP/AAAx/wAAEf8AAAn4H+CB+D/hgfj/48H4//DB///
        wA///+Af//////////////////////////8=
</value>
  </data>
</root>